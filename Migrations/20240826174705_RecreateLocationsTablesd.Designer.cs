// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MosadApiServer.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MosadApiServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240826174705_RecreateLocationsTablesd")]
    partial class RecreateLocationsTablesd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MosadApiServer.Models.Agent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Coordinateid")
                        .HasColumnType("integer");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("photo_url")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Coordinateid");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("MosadApiServer.Models.Coordinates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("x")
                        .HasColumnType("integer");

                    b.Property<int>("y")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("MosadApiServer.Models.Mission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double?>("ActualExecutionTime")
                        .HasColumnType("double precision");

                    b.Property<int?>("agentId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<int?>("targetId")
                        .HasColumnType("integer");

                    b.Property<double?>("timeLeft")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.HasIndex("agentId");

                    b.HasIndex("targetId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("MosadApiServer.Models.Target", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("coordinateid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("photo_url")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("coordinateid");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("MosadApiServer.Models.Agent", b =>
                {
                    b.HasOne("MosadApiServer.Models.Coordinates", "Coordinate")
                        .WithMany()
                        .HasForeignKey("Coordinateid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordinate");
                });

            modelBuilder.Entity("MosadApiServer.Models.Mission", b =>
                {
                    b.HasOne("MosadApiServer.Models.Agent", "agent")
                        .WithMany()
                        .HasForeignKey("agentId");

                    b.HasOne("MosadApiServer.Models.Target", "target")
                        .WithMany()
                        .HasForeignKey("targetId");

                    b.Navigation("agent");

                    b.Navigation("target");
                });

            modelBuilder.Entity("MosadApiServer.Models.Target", b =>
                {
                    b.HasOne("MosadApiServer.Models.Coordinates", "coordinate")
                        .WithMany()
                        .HasForeignKey("coordinateid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("coordinate");
                });
#pragma warning restore 612, 618
        }
    }
}
