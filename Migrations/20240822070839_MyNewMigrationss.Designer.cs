// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MosadApiServer.Data;

#nullable disable

namespace MosadApiServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240822070839_MyNewMigrationss")]
    partial class MyNewMigrationss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MosadApiServer.Models.Agent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("locationid")
                        .HasColumnType("int");

                    b.Property<string>("nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("locationid");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("MosadApiServer.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("x")
                        .HasColumnType("int");

                    b.Property<int>("y")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MosadApiServer.Models.Mission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<double?>("ActualExecutionTime")
                        .HasColumnType("float");

                    b.Property<int?>("agentId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<int?>("targetId")
                        .HasColumnType("int");

                    b.Property<double?>("timeLeft")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("agentId");

                    b.HasIndex("targetId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("MosadApiServer.Models.Target", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("locationid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("locationid");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("MosadApiServer.Models.Agent", b =>
                {
                    b.HasOne("MosadApiServer.Models.Location", "location")
                        .WithMany()
                        .HasForeignKey("locationid");

                    b.Navigation("location");
                });

            modelBuilder.Entity("MosadApiServer.Models.Mission", b =>
                {
                    b.HasOne("MosadApiServer.Models.Agent", "agent")
                        .WithMany("missions")
                        .HasForeignKey("agentId");

                    b.HasOne("MosadApiServer.Models.Target", "target")
                        .WithMany("missions")
                        .HasForeignKey("targetId");

                    b.Navigation("agent");

                    b.Navigation("target");
                });

            modelBuilder.Entity("MosadApiServer.Models.Target", b =>
                {
                    b.HasOne("MosadApiServer.Models.Location", "location")
                        .WithMany()
                        .HasForeignKey("locationid");

                    b.Navigation("location");
                });

            modelBuilder.Entity("MosadApiServer.Models.Agent", b =>
                {
                    b.Navigation("missions");
                });

            modelBuilder.Entity("MosadApiServer.Models.Target", b =>
                {
                    b.Navigation("missions");
                });
#pragma warning restore 612, 618
        }
    }
}
